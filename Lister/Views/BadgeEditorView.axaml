<UserControl xmlns="https://github.com/avaloniaui"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="460"
			 xmlns:vm="clr-namespace:Lister.ViewModels"
			 xmlns:uc="clr-namespace:Lister.Views"
			 x:Class="Lister.Views.BadgeEditorView"
			 x:DataType="vm:BadgeEditorViewModel"
			 Height="460"
			 Width="800"
			 >

	<StackPanel
		Name="panel">

		<Grid
			Name="zoomAndAcception"
			Height="40"
			Margin="10,0">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="100" ></ColumnDefinition>
				<ColumnDefinition Width="100" ></ColumnDefinition>
				
				<ColumnDefinition Width="20"></ColumnDefinition>

				<ColumnDefinition Width="30"></ColumnDefinition>
				<ColumnDefinition Width="64"></ColumnDefinition>
				<ColumnDefinition Width="30"></ColumnDefinition>

				<ColumnDefinition Width="20"></ColumnDefinition>
				<ColumnDefinition Width="30"></ColumnDefinition>
				<ColumnDefinition Width="30"></ColumnDefinition>
				<ColumnDefinition Width="30"></ColumnDefinition>
				<ColumnDefinition Width="30"></ColumnDefinition>

				<ColumnDefinition Width="20"></ColumnDefinition>
				
				<ColumnDefinition Width="102"></ColumnDefinition>
				<ColumnDefinition ></ColumnDefinition>
			</Grid.ColumnDefinitions>


			<Button
				Name="Back"
				Content="Назад"
				Width="98"
				Grid.Column="0"
				HorizontalContentAlignment="Center"
				Command="{Binding  Path = GoBackCommand}"
				KeyDown="ToParticularBadge"/>

			<Button
				Name="cancel"
				Content="Отмена"
				Width="98"
				Grid.Column="1"
				HorizontalContentAlignment="Center"
				IsEnabled="{Binding  Path = BeingProcessedBadge.IsChanged,  Mode=OneWay }"
				Command="{Binding  Path = CancelChanges}"
				KeyDown="ToParticularBadge"/>

			<Button
				Name="zoomOut"
				Content="-"
				Grid.Column="3"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding  Path = ReduceFontSize}"
				IsEnabled="{Binding   Path = ZoommerIsEnable,  Mode=OneWay}" />

			<Label
				Name="scalabilityGrade"
				Width="60"
				FontSize="14"
				Grid.Column="4"
				MaxHeight="30"
				Margin="0,3"
				GotFocus="HandleGettingFocus"
				KeyDown="ToParticularBadge"
				Content="{Binding  Path = BeingProcessedBadge.FocusedFontSize,  Mode=OneWay}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				BorderBrush="black"
				CornerRadius = "3"
				BorderThickness="1"
				IsTabStop="False"
				Focusable="False"
				IsEnabled="{Binding  Path = ZoommerIsEnable,  Mode=OneWay}"/>

			<Button
				Name="zoomOn"
				Content="+"
				Grid.Column="5"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding  Path = IncreaseFontSize}"
				IsEnabled="{Binding   Path = ZoommerIsEnable,  Mode=OneWay}" />

			<Button
				Name="left"
				Content="L"
				Grid.Column="7"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding   Path = Left}"
				IsEnabled="{Binding   Path = MoversAreEnable,  Mode=OneWay}"/>

			<Button
				Name="right"
				Content="R"
				Grid.Column="8"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding   Path = Right}"
				IsEnabled="{Binding   Path = MoversAreEnable,  Mode=OneWay}"/>

			<Button
				Name="up"
				Content="U"
				Grid.Column="9"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding   Path = Up}"
				IsEnabled="{Binding   Path = MoversAreEnable,  Mode=OneWay}"/>

			<Button
				Name="down"
				Content="D"
				Grid.Column="10"
				HorizontalAlignment="Center"
				Width="28"
				KeyDown="ToSide"
				Command="{Binding   Path = Down}"
				IsEnabled="{Binding   Path = MoversAreEnable,  Mode=OneWay}"/>

			<Button
				Name="spliter"
				Content="Разделить"
				Grid.Column="12"
				HorizontalContentAlignment="Center"
				Width="100"
				Command="{Binding   Path = Split}"
				KeyDown="ToParticularBadge"
				IsEnabled="{Binding   Path = SplitterIsEnable,  Mode=OneWay}"/>
			
		</Grid>

		
		<Grid
			Name="textEdition"
			Height="40"
			Margin="10,0">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="605"></ColumnDefinition>
				<ColumnDefinition ></ColumnDefinition>
			</Grid.ColumnDefinitions>


			<TextBox
				Name="editorTextBox"
				Width="603"
				FontSize="14"
				Grid.Column="0"
				MaxHeight="30"
				Margin="0,3"
				HorizontalAlignment="Center"
				IsEnabled="{Binding  Path = ZoommerIsEnable,  Mode=OneWay}"
				Text="{Binding  Path = BeingProcessedBadge.FocusedText,  Mode=OneWay}"
				KeyDown="ToParticularBadge"
				GotFocus="HandleGettingFocus"
				TextChanged="HandleTextEdition"/>

		</Grid>
		
		
		
		<Grid
		   Name="badgeArea"
		   Margin="10,5"
		   Background="AntiqueWhite">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="50" ></ColumnDefinition>
				<ColumnDefinition Width="750" ></ColumnDefinition>
			</Grid.ColumnDefinitions>

			<StackPanel
				Grid.Column="0">

				<Border
					Name="filterSwitcher"
					Focusable="True"
					BorderThickness="1"
					BorderBrush="Brown"
					Height="62"
					KeyDown="ToParticularBadge">
				
					<StackPanel>
					
					<Button
						Name="chooseCorrects"
						Width="48"
						Height="30"
						Command="{Binding  Path = FilterCorrects}"
						KeyDown="ToParticularBadge">
						
						<Button.Background>
							<ImageBrush
								Source = "{Binding  Path = CorrectnessIcon,  Mode=OneWay }"
								Opacity="{Binding  Path = CorrectnessOpacity,  Mode=OneWay }"/>
						</Button.Background>
					</Button>

					<Button
						Name="chooseIncorrects"
						Width="50"
						Height="30"
						Command="{Binding  Path = FilterIncorrects}"
						KeyDown="ToParticularBadge">
						
						<Button.Background>
							<ImageBrush
								Source = "{Binding  Path = IncorrectnessIcon,  Mode=OneWay }"
								Opacity="{Binding  Path = IncorrectnessOpacity,  Mode=OneWay }"/>
						</Button.Background>
					</Button>
				    </StackPanel>
					</Border>
					
				<Border
					Name="slider"
					Focusable="True"
					BorderThickness="1"
					BorderBrush="Brown"
					Height="206"
					Margin ="0,37,0,0"
					KeyDown="ToParticularBadge">

					<ScrollViewer
						 Name="sliderScroller"
						 Offset="{Binding  Path=SliderOffset,  Mode=OneWay}"
						 VerticalScrollBarVisibility="Auto"
						 AllowAutoHide="True">

						<ItemsControl
							Name="badgeStates"
							Width="50"
							HorizontalAlignment="Left"
							ItemsSource="{Binding  Path=VisibleIcons,  Mode=OneWay}">

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Border
										HorizontalAlignment="Left"
										Width="48"
										BorderBrush="{Binding  Path = BorderColor,  Mode=OneWay }"
										BorderThickness="1">
										
										<Image
											Source = "{Binding  Path = CorrectnessIcon,  Mode=OneWay }"
											Width="46"
											Height="32"
											HorizontalAlignment="Left"
											Tapped="ToParticularBadge"/>
											
									</Border>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</ScrollViewer>
				</Border>
			</StackPanel>
			
			
			<Border
				Name="workArea"
				HorizontalAlignment="Left"
				Width="680"
				Height="305"
				Grid.Column="1"
				BorderBrush="Brown"
				Background="AliceBlue"
				BorderThickness="1">

				<ScrollViewer
					Name="scroller"
					VerticalScrollBarVisibility="Auto"
					HorizontalScrollBarVisibility="Auto"
					AllowAutoHide="True">

					<Border
						Name="badge"
						BorderThickness="1"
						BorderBrush="Gray"
						Width="{Binding  Path = BeingProcessedBadge.BorderWidth,  Mode=OneWay }"
						Height="{Binding  Path = BeingProcessedBadge.BorderHeight,  Mode=OneWay }"
						VerticalAlignment="Center"
						HorizontalAlignment="Center">

						<Canvas
							Name="incorrectBadge"
							VerticalAlignment="Center"
						    HorizontalAlignment="Center"
							Width="{Binding  Path = BeingProcessedBadge.BadgeWidth,  Mode=OneWay }"
							Height="{Binding  Path = BeingProcessedBadge.BadgeHeight,  Mode=OneWay }">

							<Image
								Name="backgroundImage"
								Canvas.Top="0"
								Canvas.Left="0"
								Width="{Binding  Path = BeingProcessedBadge.BadgeWidth,  Mode=OneWay }"
								Height="{Binding  Path = BeingProcessedBadge.BadgeHeight,  Mode=OneWay }"
								VerticalAlignment="Top"
								KeyDown="ToSide"
								Source = "{Binding  Path = BeingProcessedBadge.ImageBitmap,  Mode=OneWay }"/>

							<ItemsControl
								Name="textLines"
								ItemsSource="{Binding  Path = BeingProcessedBadge.TextLines,  Mode=OneWay }">

								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<Canvas
											Width="{Binding  $parent[Canvas].Width,  Mode=OneWay }"
											Height="{Binding  $parent[Canvas].Height,  Mode=OneWay }"/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>

								<ItemsControl.Styles>
									<Style Selector="ItemsControl ContentPresenter">
										<Setter Property="Canvas.Left" Value="{Binding Path = LeftOffset,  Mode=TwoWay}" />
										<Setter Property="Canvas.Top" Value="{Binding Path = TopOffset,  Mode=TwoWay}" />
									</Style>
								</ItemsControl.Styles>

								<ItemsControl.ItemTemplate>
									<DataTemplate>

										<Border
											Background="{Binding   Path = Background,  Mode=OneWay }"
											BorderThickness="1"
											Height="{Binding Path = FontSize,  Mode=OneWay}">

											<TextBlock
												VerticalAlignment="Center"
												Height="{Binding  Path = FontSize,  Mode=OneWay}"
												FontSize="{Binding  Path = FontSize,  Mode=OneWay}"
												FontFamily="{Binding  Path = FontFamily,  Mode=OneWay}"
												FontWeight="{Binding   Path = FontWeight,  Mode=OneWay }"
												Foreground="{Binding   Path = Foreground,  Mode=OneWay }"
												DoubleTapped="Focus"
												PointerPressed="Capture"
												PointerMoved="Move"
												PointerEntered="SetCrossCursor"
												PointerExited="SetArrowCursor"
												KeyDown="ToSide"
												IsEnabled="True"
												Text="{Binding   Path = Content,  Mode=OneWay }" />

										</Border>
											
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>

						</Canvas>
					</Border>

				</ScrollViewer>
			</Border>
		</Grid>


		<Grid
			Name="navigation"
			Height="40"
			Margin="10,-2">

			<Grid.ColumnDefinitions>
				<ColumnDefinition ></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition Width="64"></ColumnDefinition>
				
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
				
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition ></ColumnDefinition>
			</Grid.ColumnDefinitions>


			<Button
				Name="firstBadge"
				Content="first"
				Grid.Column="1"
				HorizontalContentAlignment="Center"
				Width="48"
				Command="{Binding   Path = ToFirst}"
				IsEnabled="{Binding   Path = FirstIsEnable,   Mode=OneWay}" />

			<Button
				Name="previousBadge"
				Content="prev"
				Grid.Column="2"
				HorizontalContentAlignment="Center"
				Width="48"
				Command="{Binding   Path = ToPrevious}"
				IsEnabled="{Binding   Path = PreviousIsEnable,   Mode=OneWay}"/>

			<TextBox
				Name="visibleBadgeNumber"
				Width="60"
				FontSize="14"
				Grid.Column="3"
				MaxHeight="30"
				Margin="0,3"
				TextChanged="ToParticularBadge"
				Text="{Binding   Path = BeingProcessedNumber,   Mode=OneWay}"/>
			
			<Label
				Content="Из"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="4"/>

			<Label
				Content="{Binding  Path = ProcessableCount,  Mode=OneWay}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="5"/>

			<Button
				Name="nextBadge"
				Content="next"
				Grid.Column="6"
				HorizontalContentAlignment="Center"
				Width="48"
				Command="{Binding   Path = ToNext}"
				IsEnabled="{Binding   Path = NextIsEnable,   Mode=OneWay}" />

			<Button
				Name="lastBadge"
				Content="last"
				Grid.Column="7"
				HorizontalContentAlignment="Center"
				Width="48"
				Command="{Binding   Path = ToLast}"
				IsEnabled="{Binding   Path = LastIsEnable,   Mode=OneWay}"/>


		</Grid>

		<Grid
			Name="counts"
			Height="40"
			Margin="10,-7">

			<Grid.ColumnDefinitions>
				<ColumnDefinition ></ColumnDefinition>
				<ColumnDefinition Width="100"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>
				<ColumnDefinition ></ColumnDefinition>
			</Grid.ColumnDefinitions>


			<Label
				Content="С ошибками :"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="1"/>

			<Label
				Content="{Binding  Path = IncorrectBadges.Count,  Mode=OneWay}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="2"/>

		</Grid>

	</StackPanel>
</UserControl>


<!-- 
//container.BorderThickness = new Thickness (0, 0, 0, 0);




<Border
											BorderBrush="Blue"
											Background="{Binding   Path = Background,  Mode=OneWay }"
											BorderThickness="{Binding Path = FocusedBorderThickness,  Mode=OneWay}"
											Height="{Binding Path = Height,  Mode=OneWay}">





<Grid
					Name="filter">

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="50" ></ColumnDefinition>
						<ColumnDefinition Width="50" ></ColumnDefinition>
					</Grid.ColumnDefinitions>



Height="{Binding  Path = BeingProcessedBadge.BadgeHeight,  Mode=OneWay }"
MinHeight="{Binding Path = Height,  Mode=OneWay}"

using Microsoft.CodeAnalysis.CSharp.Syntax;

<Label
								FontSize="20"
								Width="100"
								Content="{Binding  Path=Correctness,  Mode=OneWay}"
								Tapped="Splitttt"/>





						<Button.Triggers>
							<EventTrigger RoutedEvent="FrameworkElement.Tapped">
								
							</EventTrigger>
						</Button.Triggers>
						
						
						
						<Border
						Name="badge"
						BorderThickness="1"
						BorderBrush="Gray"
						Width="982"
						Height="601"
						VerticalAlignment="Center"
						HorizontalAlignment="Center">

						<Canvas
							Name="incorrectBadge"
							VerticalAlignment="Top"
							Width="980"
							Height="599">

							<Image
								Name="backgroundImage"
								Width="980"
								VerticalAlignment="Top"
								KeyDown="ToSide"
								Source = "{Binding  Path = BeingProcessedBadge.ImageBitmap,  Mode=OneWay }"/>
								
								
								
								
								
			<Label
				Content="Без ошибок :"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="4"/>

			<Label
				Content="{Binding  Path = FixedBadges.Count,  Mode=OneWay}"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				FontSize="14"
				Grid.Column="5"/>	
				
				
				
				<ColumnDefinition Width="20"></ColumnDefinition>
				<ColumnDefinition Width="100"></ColumnDefinition>
				<ColumnDefinition Width="50"></ColumnDefinition>	
				
				
				
						<TextBox
			
			Grid.Column="10"
			Width="60"
			MaxHeight="30"
			FontSize="14"
			IsReadOnly="True"
			Focusable="False"
			KeyUp="SetNewScale"
			DataContext="{Binding   Path = SceneVM,   Mode=OneWay}"
			Text="{Binding   Path = ZoomDegreeInView,   Mode=OneWay}"/>
			
			
			
			
				<StackPanel>

		<Canvas>

			<TextBlock
				Name="message"
				Margin="50,0,50,0"
				Canvas.Top="100"
				Width="500"
				FontSize="16"
				TextWrapping="WrapWithOverflow"
				MaxLines="3"
				
				/>

			<Button
				Name="ok"
				Width="100"
				Height="40"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				Canvas.Top="200"
				Canvas.Left="200"
				Content="Ok"
				Tapped="HandleTapped"
				/>

		</Canvas>
	</StackPanel>
			


-->